<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.shoppingmall.user.dao.WxuserMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.shoppingmall.user.entity.Wxuser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="niname" property="niname" jdbcType="VARCHAR" />
    <result column="online_grade" property="onlineGrade" jdbcType="INTEGER" />
    <result column="offline_grade" property="offlineGrade" jdbcType="INTEGER" />
    <association property="user" resultMap="UserResultMap"></association>
  </resultMap>




  <resultMap id="UserResultMap" type="com.shopping.shoppingmall.user.entity.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="iphone" property="iphone" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="User_Column_List" >
    uid, openid, name, iphone, province, city
  </sql>
  <sql id="Base_Column_List" >
    id, openid, niname, online_grade, offline_grade
  </sql>

  <select id="SelectGroup" resultMap="BaseResultMap">
    select
    *
    from wxuser wx INNER  JOIN  user u ON wx.openid=u.openid
    where u.uid=#{uid}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from wxuser
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from wxuser
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.shopping.shoppingmall.user.entity.Wxuser" >
    insert into wxuser (id, openid, niname, 
      online_grade, offline_grade)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{niname,jdbcType=VARCHAR}, 
      #{onlineGrade,jdbcType=INTEGER}, #{offlineGrade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.shoppingmall.user.entity.Wxuser" >
    insert into wxuser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="niname != null" >
        niname,
      </if>
      <if test="onlineGrade != null" >
        online_grade,
      </if>
      <if test="offlineGrade != null" >
        offline_grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="niname != null" >
        #{niname,jdbcType=VARCHAR},
      </if>
      <if test="onlineGrade != null" >
        #{onlineGrade,jdbcType=INTEGER},
      </if>
      <if test="offlineGrade != null" >
        #{offlineGrade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.shoppingmall.user.entity.Wxuser" >
    update wxuser
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="niname != null" >
        niname = #{niname,jdbcType=VARCHAR},
      </if>
      <if test="onlineGrade != null" >
        online_grade = #{onlineGrade,jdbcType=INTEGER},
      </if>
      <if test="offlineGrade != null" >
        offline_grade = #{offlineGrade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.shoppingmall.user.entity.Wxuser" >
    update wxuser
    set openid = #{openid,jdbcType=VARCHAR},
      niname = #{niname,jdbcType=VARCHAR},
      online_grade = #{onlineGrade,jdbcType=INTEGER},
      offline_grade = #{offlineGrade,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>